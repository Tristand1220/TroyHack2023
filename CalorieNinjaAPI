package com.example.nutritrack;

import javafx.application.Application;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.control.TextArea;
import javafx.scene.control.TextField;
import javafx.scene.layout.VBox;
import javafx.stage.Stage;
import org.apache.http.HttpResponse;
import org.apache.http.client.HttpClient;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.impl.client.HttpClients;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.logging.Level;
import java.util.logging.Logger;

public class Main extends Application {

	private TextField inputField;
	private TextArea resultArea;

	public static void main(String[] args) {
		launch(args);
	}

	@Override
	public void start(Stage primaryStage) {
		primaryStage.setTitle("NutriTrack");

		inputField = new TextField();
		Button submitButton = new Button("Submit");
		resultArea = new TextArea();
		resultArea.setWrapText(true);

		submitButton.setOnAction(e -> {
			String query = inputField.getText(); // Get user input from the text field
			try {
				String apiResponse = makeAPICall(query);
				resultArea.setText(apiResponse);
			} catch (IOException ex) {
				Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
			}
		});

		VBox layout = new VBox(10);
		layout.getChildren().addAll(inputField, submitButton, resultArea);

		Scene scene = new Scene(layout, 400, 300);
		primaryStage.setScene(scene);
		primaryStage.show();
	}

	private String makeAPICall(String query) throws IOException {
		String apiKey = "gCinFKoQRCFup6+mo0i+ig==7PHh1I04OqvakcH7";

		// URL-encode the query string
		String encodedQuery = URLEncoder.encode(query, StandardCharsets.UTF_8);

		String apiUrl = "https://api.calorieninjas.com/v1/nutrition?query=" + encodedQuery;

		HttpClient httpClient = HttpClients.createDefault();
		HttpGet request = new HttpGet(apiUrl);
		request.addHeader("X-Api-Key", apiKey);

		HttpResponse response = httpClient.execute(request);

		BufferedReader reader = new BufferedReader(new InputStreamReader(response.getEntity().getContent()));
		StringBuilder result = new StringBuilder();
		String line;
		int charactersCount = 0;

		while ((line = reader.readLine()) != null) {
			if (charactersCount + line.length() <= 400) { // Limit the display to the first 500 characters
				result.append(line).append("\n");
				charactersCount += line.length();
			} else {
				break; // Stop reading once the character limit is reached
			}
		}

		return result.toString();
	}
}
